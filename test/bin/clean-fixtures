#!/usr/bin/env node

'use strict';

const Promise = require('bluebird');
const path = require('path');
const unlink = Promise.promisify(require('fs').unlink);
const glob = Promise.promisify(require('glob'));

const fixturesDir = path.normalize(`${__dirname}/../fixtures`);

// -------------------------------------------------

const timestamp = Date.parse(process.argv[2]);

if (!timestamp) {
    process.stderr.write('Invalid date');
    process.exit(1);
}

// -------------------------------------------------

const statCache = {};

glob('**/*headers', { cwd: fixturesDir, statCache, stat: true })
.map((file) => path.join(fixturesDir, file))
.filter((file) => statCache[file].atime.getTime() < timestamp)
.map((file) => {
    console.log(`Removing ${file}`);

    return Promise.all([
        unlink(file),
        unlink(file.replace(/\.headers$/, '')).catch({ code: 'ENOENT' }, () => null),
    ]);
}, { concurrency: 20 });
